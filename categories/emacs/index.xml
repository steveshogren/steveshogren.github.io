<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>emacs on deliberate software</title>
    <link>https://deliberate-software.com/categories/emacs/</link>
    <description>Recent content in emacs on deliberate software</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://deliberate-software.com/categories/emacs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Simple Haskell Automation in Emacs</title>
      <link>https://deliberate-software.com/emacs-customization/</link>
      <pubDate>Tue, 05 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://deliberate-software.com/emacs-customization/</guid>
      <description>I am working through the amazing Data 61 Functional Programming Course (seriously, put it on your list!) and I found myself doing a repeated set of actions. Repeated sets of actions are perfect for automation!
The course has some sections with comments indicating the expected behavior:
-- &amp;gt;&amp;gt;&amp;gt; parse (satisfyAll (isUpper :. (/= &amp;#39;X&amp;#39;) :. Nil)) &amp;#34;ABC&amp;#34; -- Result &amp;gt;BC&amp;lt; &amp;#39;A&amp;#39; -- -- &amp;gt;&amp;gt;&amp;gt; isErrorResult (parse (satisfyAll (isUpper :. (/= &amp;#39;X&amp;#39;) :.</description>
    </item>
    
    <item>
      <title>Editor Abstractions</title>
      <link>https://deliberate-software.com/editor-abstractions/</link>
      <pubDate>Mon, 23 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://deliberate-software.com/editor-abstractions/</guid>
      <description>(Want to become a Vim expert? Check out my new book: 10 Minute Vim)
I was recently inspired by a comment from a respected coworker:
 &amp;ldquo;I am just as productive with basic Vim commands as I am with a refactoring suite like ReSharper.&amp;rdquo;
 I have pair-programmed with him for hundreds of hours of C# development. He is equally productive with both, that much I know. On some tasks he is less efficient than with ReSharper, on others he is more.</description>
    </item>
    
    <item>
      <title>Emacs Project Tip</title>
      <link>https://deliberate-software.com/emacs-project-tip/</link>
      <pubDate>Sat, 06 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://deliberate-software.com/emacs-project-tip/</guid>
      <description>I recently have been working in a Clojure project which is made up of several microservices. While trying to build in a secure method for each service to be able to call the others, I&amp;rsquo;ve been in several different projects at the same time.
At least once I accidentally opened the wrong &amp;ldquo;handler.clj&amp;rdquo; buffer, and spent a few minutes adding a function that never worked. Since I hate doing things like this, I wanted a simple way to see what project I was currently viewing.</description>
    </item>
    
    <item>
      <title>Emacs/VIm The Endless Debate</title>
      <link>https://deliberate-software.com/the-endless-debate/</link>
      <pubDate>Fri, 22 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://deliberate-software.com/the-endless-debate/</guid>
      <description>The last three and a half years for me have been terrible. Why? Well, three and half years ago, I discovered the endless debate, Emacs vs. Vim. Being an efficiency nut, I could not fathom the horror of learning one, and by that action, not learning the other. What if the one I learned was not the &#34;best&#34; one? I could see that both were excellent and worth learning, but I wanted to learn both concurrently.</description>
    </item>
    
  </channel>
</rss>